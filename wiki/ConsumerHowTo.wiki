#summary OAuth Consumer How To

= OAuth Consumer Introduction =

This gives an overview how you can use the `oauth-php` library when you want to connect to a server.

= How To's =

== Add the OAuth server to which you want to connect ==

First fetch an instance of the OAuthStore you want to use, per default this will instantiate an `OAuthStoreMySQL` store.  Then add the server to the store, this will return the consumer_key from the , the `user_id` is the id of the currently logged on user.

You need to obtain the consumer key and consumer secret from the server. Every web site has a place where it is explained how you can obtain a key and secret for your application.

{{{
// Get the id of the current user (must be an int)
$user_id = 1;

// The server description
$server = array(
    'consumer_key' => 'some-server-supplied-key',
    'consumer_secret' => 'some-server-supplied-secret',
    'server_uri' => 'http://www.example.com/api/',
    'signature_methods' => array('HMAC-SHA1', 'PLAINTEXT'),
    'request_token_uri' => 'http://www.example.com/request_token',
    'authorize_uri' => 'http://www.example.com/authorize',
    'access_token_uri' => 'http://www.example.com/access_token'
);

// Save the server in the the OAuthStore
$store = OAuthStore::instance();
$consumer_key = $store->updateServer($server, $user_id);
}}}


== List all OAuth servers

You can easily obtain a list of all registered OAuth servers.  This will return an array with the full description of all servers registered for a certain user.

{{{
$store = OAuthStore::instance();
$servers = $store->listServers($optional_filter_text, $user_id);
}}}


== Delete an OAuth server from the registry ==

You can simply delete an OAuth server from the registry.  You need to supply the user id for which you want to delete the server.

{{{
$store = OAuthStore::instance();
$store->deleteServer($consumer_key, $user_id);
}}}